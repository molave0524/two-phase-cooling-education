'use client'

import React, { useState } from 'react'
import {
  ChatBubbleLeftRightIcon,
  CpuChipIcon,
  QuestionMarkCircleIcon,
  SparklesIcon,
} from '@heroicons/react/24/outline'
import { AIAssistant } from '@/components/ai/AIAssistant'
import styles from './AIAssistantPreview.module.css'

interface AssistantCapability {
  icon: React.ReactNode
  title: string
  description: string
  examples: string[]
}

const ASSISTANT_CAPABILITIES: AssistantCapability[] = [
  {
    icon: <CpuChipIcon className="w-6 h-6" />,
    title: 'Hardware Compatibility',
    description: 'Analyzes your components for optimal cooling configuration',
    examples: [
      'Component thermal requirements',
      'Case compatibility checking',
      'Performance bottleneck identification',
    ],
  },
  {
    icon: <SparklesIcon className="w-6 h-6" />,
    title: 'Performance Optimization',
    description: 'Provides data-driven recommendations for maximum efficiency',
    examples: [
      'Thermal performance predictions',
      'Overclocking safety margins',
      'Power consumption optimization',
    ],
  },
  {
    icon: <QuestionMarkCircleIcon className="w-6 h-6" />,
    title: 'Technical Education',
    description: 'Explains complex thermal concepts in accessible terms',
    examples: [
      'Two-phase physics principles',
      'Environmental impact explanations',
      'Maintenance best practices',
    ],
  },
]

export const AIAssistantPreview: React.FC = () => {
  const [isAIOpen, setIsAIOpen] = useState(false)

  return (
    <div className={styles.aiSection}>
      <div className={styles.container}>
        <div className={styles.contentWrapper}>
          {/* Section Header */}
          <div className={styles.header}>
            <div className={styles.titleWrapper}>
              <ChatBubbleLeftRightIcon className={styles.titleIcon} />
              <h2 id='ai-assistant-heading' className={styles.title}>
                AI Assistant
              </h2>
            </div>
            <p className={styles.subtitle}>
              Get instant help with two-phase cooling technology, product recommendations, and technical questions.
            </p>
          </div>

          <div className={styles.mainGrid}>
            {/* Assistant Capabilities */}
            <div className={styles.capabilitiesGrid}>
              {ASSISTANT_CAPABILITIES.map((capability, index) => (
                <div key={index} className={styles.capabilityCard}>
                  <div className={styles.capabilityIcon}>
                    {capability.icon}
                  </div>
                  <h3 className={styles.capabilityTitle}>{capability.title}</h3>
                  <p className={styles.capabilityDescription}>{capability.description}</p>
                  <ul className={styles.capabilityExamples}>
                    {capability.examples.map((example, exampleIndex) => (
                      <li key={exampleIndex}>{example}</li>
                    ))}
                  </ul>
                </div>
              ))}
            </div>

            {/* Try It Now Section */}
            <div className={styles.tryItSection}>
              <div className={styles.tryItContent}>
                <h3 className={styles.tryItTitle}>Ready to Get Help?</h3>
                <p className={styles.tryItDescription}>
                  Our AI assistant is trained on all our technical documentation, FAQ, and product specifications.
                  Ask anything about two-phase cooling technology!
                </p>
                <button
                  onClick={() => setIsAIOpen(true)}
                  className={styles.tryItButton}
                >
                  <ChatBubbleLeftRightIcon className="w-5 h-5" />
                  Start Conversation
                </button>
              </div>
            </div>
          </div>

          {/* Live AI Assistant */}
          <AIAssistant
            isOpen={isAIOpen}
            onToggle={() => setIsAIOpen(!isAIOpen)}
            context={{}}
          />
        </div>
      </div>
    </div>
  )
}

export default AIAssistantPreview
